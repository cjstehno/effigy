buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.8'
    }
}

subprojects {
    version = '0.3.0'
    group = 'com.stehno.effigy'

    apply plugin: 'groovy'
    apply plugin: 'codenarc'
    apply plugin: 'com.github.ben-manes.versions'

    sourceCompatibility = 8
    targetCompatibility = 8

    compileGroovy {
        groovyOptions.optimizationOptions.indy = false
    }

    configurations {
        groovyDoc
    }

    repositories {
        jcenter()
    }

    dependencies {
        compile 'org.codehaus.groovy:groovy-all:2.4.3'

        testCompile 'junit:junit:4.12'
        testCompile 'org.mockito:mockito-all:1.9.5'

        groovyDoc "org.codehaus.groovy:groovy-groovydoc:2.4.3"
        groovyDoc "org.codehaus.groovy:groovy-ant:2.4.3"
    }

    test {
        jvmArgs '-Xverify:none'
    }

    groovydoc {
        groovyClasspath = configurations.groovyDoc
    }

    codenarc {
        toolVersion = '0.22'
    }

    codenarcMain {
        ignoreFailures false
        configFile file('../config/codenarc/codenarc-main.rules')

        maxPriority1Violations 0
        maxPriority2Violations 10
        maxPriority3Violations 20
    }

    codenarcTest {
        // we won't fail the build for test inspection errors
        ignoreFailures true
        configFile file('../config/codenarc/codenarc-test.rules')
    }
}

boolean isWindows(){
    System.properties['os.name'].toLowerCase().contains('windows')
}

task guide(type:Exec,group:'Documentation', description:'Builds the user guide.'){
    inputs.dir fileTree('effigy-guide')
    outputs.dir fileTree('effigy-guide/build')

    workingDir './effigy-guide'

    if (isWindows()) {
        commandLine 'cmd', '/c', 'gaidenw.bat', 'build'

    } else {
        commandLine './gaidenw', 'build'
    }
}

task cleanGuide(type:Exec,group:'Documentation', description:'Cleans the user guide.'){
    workingDir './effigy-guide'
    if (isWindows()) {
        commandLine 'cmd', '/c', 'gaidenw.bat', 'clean'

    } else {
        commandLine './gaidenw', 'clean'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}